<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ShowInExistingPage">
    <value>Page existante sélectionnée...</value>
    <comment>phrase : Selected existing page...</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="SelectedNews">
    <value>Nouvelles sélectionnées…</value>
    <comment>phrase : Selected news...</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="By">
    <value>Par</value>
    <comment>word: by</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="LastPublished">
    <value>Date de dernière publication :</value>
    <comment>phrase : Last published</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="CssClasses">
    <value>Classes CSS</value>
    <comment>phrase : CSS classes</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="FullStory">
    <value>Lire la suite</value>
    <comment>phrase : Full story</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="ListSettings">
    <value>Paramètres de liste</value>
    <comment>phrase : List settings</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="DivideToItemPerPage">
    <value>Diviser la liste sur plusieurs pages en allant jusqu'à {0} éléments par page</value>
    <comment>phrase : Divide the list on pages up to {TextBox} items per page</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="NarrowSelection">
    <value>Nouvelles Filtrées par ...</value>
    <comment>phrase : Filtered news by...</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="AllPublishedNews">
    <value>Toutes les News publiées</value>
    <comment>phrase : All published news</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="LastModified">
    <value>Dernière modification</value>
    <comment>phrase : Last modified</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="UsePaging">
    <value>Utiliser le paging &lt;span class='sfNote'&gt;(en cours d'implémentation)&lt;/span&gt;</value>
    <comment>phrase : Use paging</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="MoreOptions">
    <value>Plus d'options</value>
    <comment>phrase : More options</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="NoLimitPaging">
    <value>Pas de limite et de pagination</value>
    <comment>phrase : No limit and paging</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="UseLimit">
    <value>Utiliser la limite</value>
    <comment>phrase : Use limit</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="ByTitleAZ">
    <value>Par Titre (A - Z)</value>
    <comment>phrase : By Title (A-Z)</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="Content">
    <value>Contenu</value>
    <comment>word: Content</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="Display">
    <value>Affichage</value>
    <comment>word : Display</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="ShowInSamePageNote">
    <value>(avec la même présentation que la page de liste)</value>
    <comment>phrase : (with the same layout as the list page)</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="NewsResourcesDescription">
    <value>Codes localisables pour le widget Actualités.</value>
    <comment>Description for the News widget resources class.</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="Provider">
    <value>Fournisseur</value>
    <comment>Provider</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="NewsToDisplay">
    <value>Quelles news afficher ?</value>
    <comment>phrase : Which news to display?</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="SingleItemSettings">
    <value>Paramètres des éléments uniques</value>
    <comment>phrase : Single item settings</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="OpenSingleItem">
    <value>Ouvrir un seul élément dans...</value>
    <comment>phrase : Open single item in...</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="AsSetInAdvancedMode">
    <value>Comme dans le mode Avancé</value>
    <comment>phrase: As set in Advanced mode</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="ShowInSamePage">
    <value>Page auto-générée</value>
    <comment>phrase : Auto-generated page (with the same layout as the list page)</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="ListTemplate">
    <value>Modèle de liste</value>
    <comment>phrase : List template</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="ShowLimitedItems">
    <value>Afficher un nombre restreint d'éléments {0} éléments au total</value>
    <comment>phrase : Show only limited number of items {TextBox} items in total</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="ShowAllItems">
    <value>Afficher tous les éléments publiés à la fois</value>
    <comment>phrase : Show all published items at once</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="SortNews">
    <value>Trier les news</value>
    <comment>phrase : Sort news</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="NewsResourcesTitle">
    <value>Ressources du widget Nouvelles</value>
    <comment>Title for the News widget resources class.</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="ByTitleZA">
    <value>Par Titre (Z - A)</value>
    <comment>phrase : By Title (Z-A)</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="DetailTemplate">
    <value>Modèle de détails</value>
    <comment>phrase : Detail template</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
  <data name="AsSetManually">
    <value>Configuration manuelle</value>
    <comment>phrase: As set manually</comment>
    <lastModified>2022-02-16T20:40:41</lastModified>
  </data>
</root>